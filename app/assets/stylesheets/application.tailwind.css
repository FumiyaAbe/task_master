@tailwind base;
@tailwind components;
@tailwind utilities;

/* ---- Tailwind v4: カスタムカラー定義 ---- */
@theme {
  --color-base:   #F9FAFB;
  --color-main:   #0F3A69;
  --color-accent: #2563EB;
}

/* === Custom === */
@layer base {
  /* 追加：CSS変数を :root にも明示定義（@theme が効かない環境の保険） */
  :root {
    --color-base:   #F9FAFB;
    --color-main:   #0F3A69;
    --color-accent: #2563EB;
  }

  body { @apply bg-base text-gray-900; }
}

@layer components {
  .btn {
    @apply inline-flex items-center justify-center gap-2 rounded-xl px-3 py-2
           text-sm font-medium transition
           focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2
           disabled:opacity-50 disabled:cursor-not-allowed;
  }
  .btn-main   { @apply btn bg-main   text-white hover:opacity-90; }
  .btn-accent { @apply btn bg-accent text-white hover:opacity-90; }
  .btn-ghost  { @apply btn border border-gray-300 text-gray-700 hover:bg-gray-50; }
  .btn-ghost.is-active { @apply bg-main text-white border-main hover:opacity-100; }

  .btn-main  > button { @apply btn bg-main   text-white hover:opacity-90; }
  .btn-accent> button { @apply btn bg-accent text-white hover:opacity-90; }
  .btn-ghost > button { @apply btn border border-gray-300 text-gray-700 hover:bg-gray-50; }
  .btn-ghost.is-active > button { @apply bg-main text-white border-main hover:opacity-100; }

  .card       { @apply rounded-2xl border bg-white p-4 shadow-sm; }
  .card-title { @apply text-base font-semibold; }
  .card-meta  { @apply text-xs text-gray-500; }

  .badge        { @apply inline-flex items-center rounded-full px-2 py-0.5 text-xs font-medium; }
  .badge-gray   { @apply badge bg-gray-100   text-gray-700; }
  .badge-green  { @apply badge bg-green-100  text-green-700; }
  .badge-red    { @apply badge bg-red-100    text-red-700; }
  .badge-indigo { @apply badge bg-indigo-100 text-indigo-700; }

  .page-head { @apply flex items-center justify-between gap-3; }

  .input    { @apply w-full rounded-xl border px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500; }
  .textarea { @apply w-full rounded-xl border px-3 py-2 text-sm min-h-[120px] focus:outline-none focus:ring-2 focus:ring-indigo-500; }
  .checkbox { @apply h-4 w-4 rounded border; }
  .form-label { @apply block text-sm font-medium text-gray-700; }
  .form-hint  { @apply mt-1 text-xs text-gray-500; }
  .form-error { @apply mt-1 text-xs text-red-600; }

  /* ▼ 追加：SimpleForm / Rails のエラー表示 */
  .input-error { @apply ring-1 ring-red-500 border-red-500 bg-red-50; }

  /* Rails 標準 field_with_errors ラッパ */
  .field_with_errors > input,
  .field_with_errors > textarea,
  .field_with_errors > select {
    @apply input-error;
  }

  /* Simple Form: div.input.error の内側要素を赤枠に */
  .simple_form div.input.error input,
  .simple_form div.input.error textarea,
  .simple_form div.input.error select {
    @apply input-error;
  }

  /* エラー時のラベル色 */
  .simple_form div.input.error label,
  .input.error .form-label {
    @apply text-red-700;
  }

  /* invalid-feedback クラス（Simple Form が使うことあり） */
  .invalid-feedback {
    @apply mt-1 text-xs text-red-600;
  }

  /* エラーサマリー（f.error_notification） */
  .simple_form .error_notification {
    @apply mx-auto max-w-3xl mb-3 rounded-xl px-4 py-3 text-sm
           border border-red-200 bg-red-50 text-red-700;
  }

  /* --- Simple Form のデフォルト error クラスに対応 --- */
  .simple_form .error {
    @apply text-red-600 text-sm mt-1;
  }

  /* wrapper が .error のときも入力枠を赤にする（.input だけに依存しない） */
  .simple_form .error input,
  .simple_form .error textarea,
  .simple_form .error select {
    @apply input-error;
  }

  /* 念のため label も赤く（wrapper に .error が付く前提） */
  .simple_form .error label {
    @apply text-red-700;
  }

  .flash-error { @apply mx-auto max-w-3xl mb-3 rounded-xl px-4 py-3 text-sm
                        border border-red-200 bg-red-50 text-red-700; }

  .flash-base   { @apply mx-auto max-w-3xl mb-3 rounded-xl px-4 py-2 text-sm; }
  .flash-notice { @apply flash-base bg-green-50 text-green-800 border border-green-200; }
  .flash-alert  { @apply flash-base bg-red-50   text-red-800   border border-red-200; }
  .flash-info   { @apply flash-base bg-blue-50  text-blue-800  border border-blue-200; }

  /* ==== ここから補強（wrapper: :tailwind の has-error 等も拾う） ==== */

  /* 1) tailwind wrapper の has-error にも赤枠・赤文字 */
  .simple_form .has-error input,
  .simple_form .has-error textarea,
  .simple_form .has-error select { @apply input-error; }
  .simple_form .has-error label { @apply text-red-700; }

  /* 2) <span class="error"> を赤に（環境によって出力される） */
  span.error { @apply mt-1 text-xs text-red-600; }

  /* 3) error_notification クラスを単体でも拾う */
  .error_notification {
    @apply mx-auto max-w-3xl mb-3 rounded-xl px-4 py-3 text-sm
           border border-red-200 bg-red-50 text-red-700;
  }

  /* 4) 入力に is-invalid が付く環境のフォールバック */
  input.is-invalid,
  textarea.is-invalid,
  select.is-invalid { @apply input-error; }

  .calendar-week { @apply grid grid-cols-7 gap-2 text-sm mb-2; }
  .calendar-grid { @apply grid grid-cols-7 gap-2; }

  /* --- site header hardening --- */
  .site-header {
    /* 直指定で確実に紺へ（変数未定義時も #0F3A69 を採用） */
    background-color: var(--color-main, #0F3A69);
    color: #fff;
    @apply bg-main text-white;
  }
  .site-header a { @apply text-white/90 hover:text-white; }
}

/* ▼▼▼ Step.1 追加：ユーティリティの手動定義（@theme の保険） ▼▼▼ */
@layer utilities {
  .bg-main     { background-color: var(--color-main); }
  .text-main   { color:            var(--color-main); }
  .border-main { border-color:     var(--color-main); }
}
/* ▲▲▲ ここまで Step.1 追加 ▲▲▲ */
